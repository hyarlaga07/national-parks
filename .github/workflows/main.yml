name: Build and Rollout Multiarchitecture Containers

env: 
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  REDHAT_USERNAME: ${{ secrets.REDHAT_USERNAME }}
  REDHAT_PASSWORD: ${{ secrets.REDHAT_PASSWORD }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  Z_IMAGE_TAGS: s390x-${{ github.sha }}
  X_IMAGE_TAGS: amd64-${{ github.sha }}
  MANIFEST_IMAGE_TAG: manifest-${{ github.sha }}
  ROX_CENTRAL_ADDRESS: ${{ secrets.ROX_ADDRESS }}
  ROX_API_TOKEN: ${{ secrets.ROX_API_TOKEN }}

  IMAGE_REGISTRY: quay.io/mmondics
  APP_NAME: nationalparks
  MANIFEST_NAME: nationalparks-manifest
  
on:
  push: 
    paths:
      - source/nationalparks-py/*

jobs:
  s390x-build-and-push: 
    name: s390x build and push to quay.io
    runs-on: [self-hosted, linux, s390x]
    environment: openshift
    
    steps:
    - name: Check if secrets exists
      uses: actions/github-script@v3
      with:
        script: |
          const secrets = {
            QUAY_PASSWORD: `${{ secrets.QUAY_PASSWORD }}`,
            QUAY_USERNAME: `${{ secrets.QUAY_USERNAME }}`,
            REDHAT_USERNAME: `${{ secrets.REDHAT_USERNAME }}`,
            REDHAT_PASSWORD: `${{ secrets.REDHAT_PASSWORD }}`,
          };

          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.warning(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`✔️ Secret "${name}" is set`);
            return false;

          });

          if (missingSecrets.length > 0) {
            core.setFailed(`❌ At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`✅ All the required secrets are set`);
          }

    - name: Checkout
      id: checkout
      uses: actions/checkout@v2

    - name: podman build
      run: |
        podman version
        podman login registry.redhat.io -u ${{ secrets.REDHAT_USERNAME }} -p ${{ secrets.REDHAT_PASSWORD }}
        podman build -t ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.Z_IMAGE_TAGS }} ./source/nationalparks-py/

    - name: Push to Registry 
      id: push-to-registry
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: ${{ env.Z_IMAGE_TAGS }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.QUAY_USERNAME }}
        password: ${{ env.QUAY_PASSWORD }}

  amd64-build-and-push: 
    name: amd64 build and push to quay.io
    runs-on: [self-hosted, linux, x64]
    environment: openshift

    steps:
    - name: Check if secrets exists
      uses: actions/github-script@v3
      with:
        script: |
          const secrets = {
            QUAY_PASSWORD: `${{ secrets.QUAY_PASSWORD }}`,
            QUAY_USERNAME: `${{ secrets.QUAY_USERNAME }}`,
            REDHAT_USERNAME: `${{ secrets.REDHAT_USERNAME }}`,
            REDHAT_PASSWORD: `${{ secrets.REDHAT_PASSWORD }}`,
          };

          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.warning(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`✔️ Secret "${name}" is set`);
            return false;

          });

          if (missingSecrets.length > 0) {
            core.setFailed(`❌ At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`✅ All the required secrets are set`);
          }

    - name: Checkout
      id: checkout
      uses: actions/checkout@v2

    - name: podman build
      run: |
        podman version
        podman login registry.redhat.io -u ${{ secrets.REDHAT_USERNAME }} -p ${{ secrets.REDHAT_PASSWORD }}
        podman build -t ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.X_IMAGE_TAGS }} ./source/nationalparks-py/

    - name: Push to Registry 
      id: push-to-registry
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ env.APP_NAME }}
        tags: ${{ env.X_IMAGE_TAGS }}
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.QUAY_USERNAME }}
        password: ${{ env.QUAY_PASSWORD }}

  create-manifest:
    name: combine amd64 and s390x container images into a single manifest and push to quay.io
    runs-on: ubuntu-latest
    needs:
      - s390x-build-and-push
      - amd64-build-and-push
    environment: openshift
    
    steps:
      - name: podman login
        run: podman login ${{ env.IMAGE_REGISTRY }} -u ${{ env.QUAY_USERNAME }} -p ${{ env.QUAY_PASSWORD }}
      - name: create manifest list
        run: podman manifest create ${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }}
      - name: pull new container images
        run: |
          podman pull ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.Z_IMAGE_TAGS }}
          podman pull ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.X_IMAGE_TAGS }}
      - name: add container images to manifest
        run: |
          podman manifest add ${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }} ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.Z_IMAGE_TAGS }}
          podman manifest add ${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }} ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ env.X_IMAGE_TAGS }}
      - name: push manifest list
        run: podman manifest push ${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }} ${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }}
  
  update-app-yaml:
    name: update nationalparks application YAML to use new manifest image
    runs-on: ubuntu-latest
    needs: create-manifest
    environment: openshift
    
    steps:
      - name: checkout
        uses: actions/checkout@v3.5.3
      - name: one liner to replace container image in YAML
        run: sed -i '183s@.*@           ${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }}@' ./yaml/combined/national-parks-combined.yaml
      - name: git config
        run: |
          git config --global user.email ${{ env.GIT_EMAIL }}
          git config --global user.name ${{ env.GIT_USERNAME }}
      - name: check for changes
        run: git status
      - name: stage changed files
        run: git add .
      - name: commit changed files
        run: git commit -m "auto update national-parks-combined.yaml"
      - name: fetch from main
        run: git fetch origin main
      - name: push code to master
        run: git push origin HEAD:main

  acs-image-scan: 
    name: Scan container manifest with Red Hat Advanced Cluster Security
    needs: update-app-yaml
    runs-on: ubuntu-latest
    environment: openshift
    
    steps:
    - name: scan manifest with roxctl
      run: |
        podman run --privileged -e ROX_API_TOKEN=${{ env.ROX_API_TOKEN }} \
        -it registry.redhat.io/advanced-cluster-security/rhacs-roxctl-rhel8:4.1.0 \
        -e ${{ env.ROX_CENTRAL_ADDRESS }} \
        image check --image=${{ env.IMAGE_REGISTRY }}/${{ env.MANIFEST_NAME }}:${{ env.MANIFEST_IMAGE_TAG }}
